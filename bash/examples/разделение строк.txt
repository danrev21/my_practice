# Скрипт для разделения строки на основе разделителя   (IFS)

my_string="Ubuntu;Linux Mint;Debian;Arch;Fedora"
IFS=';' read -ra my_array <<< "$my_string"
---------
# Печать разделенной строки
for i in "${my_array[@]}"
do
    echo $i
done
-----------
IFS=';' read -ra my_array <<< "$my_string" 

IFS определяет разделитель, по которому вы хотите разбить строку. В нашем случае это точка с запятой. Это может быть что угодно: пробел, табуляция, запятая или даже алфавит.

IFS в команде read разделяет входные данные в разделителе. Команда read читает необработанный ввод (опция -r), поэтому интерпретирует обратную косую черту буквально, а не обрабатывает их как escape-символ. Опция -a с командой read сохраняет слово read в массиве.
-----------------------------------------------------------------------------------
# Скрипт для разделения строки на основе разделителя  (tr)

my_string="Ubuntu;Linux Mint;Debian;Arch;Fedora"  
my_array=($(echo $my_string | tr ";" "\n"))

#Print the split string
for i in "${my_array[@]}"
do
    echo $i
done
----------------------------------------------------------------------------------------

sentence="$@"
read -r -a words <<< "$sentence"
for word in ${words[@]}; do
    inc=$(( i++ ))
    read -r -a l${inc} <<< $(sed 's/./& /g' <<< $word)
done

echo ${words[1]} # print "CD"
echo ${l1[1]} # print "D"

Первое read читает все слова, внутреннее - для букв.

Команда sed добавляет пробел после каждого письма, чтобы строка разделилась, read -a. Вы также можете использовать эту команду sed для удаления нежелательных символов из слов (например, запятых) перед расщеплением.

--------------------------------------------------------

слово в массив

SURNAME="asdfg"
declare -a ARRAY 
array_surname=${#SURNAME} 
for ((i=0; i<=$((array_surname-1)); i++)) 
do 
        ARRAY=( "${ARRAY[@]}" "${SURNAME:$i:1}") 
done 

echo ${ARRAY[2]}
------------------------------------------------------------------------


https://qastack.ru/unix/253279/bash-script-split-word-on-each-letter   ===разделение слова на буквы






